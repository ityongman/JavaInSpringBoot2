<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为warn -->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置， 当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="warn" monitorInterval="30">
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<console name="Console" target="SYSTEM_OUT">
			<!--输出日志的格式 -->
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" />
		</console>
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
		<!--<File name="log" fileName="log/test.log" append="false"> <PatternLayout 
			pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/> </File> -->
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size， 则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFileDebug"
			fileName="${sys:user.home}/logs/springboot-log4j2-demo/debug.log"
			filePattern="${sys:user.home}/logs/springboot-log4j2-demo/$${date:yyyy-MM}/debug-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
				<ThresholdFilter level="INFO" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="DEBUG" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>
		<!--大坑记录仪：这里经过多次测试，搞清了其套路，坑爹的博客，基本都是各种扒，根本没有试是否好用 -->
		<!-- 这里的日志类似流一样的进入 RollingFileInfo ， 然后经过 ThresholdFilter 进行过滤。 ps:这里就是坑了，如果ThresholdFilter的顺序不一样的话，输入的结果是不一样的！！！ 
			因为经过ThresholdFilter的时候，如果有匹配项，则直接打印日志了，所以需要把高等级的日志级别放在前面 并且，onMatch属性设置为DENY，过滤掉高等级的日志；onMismatch设置为NEUTRAL，把低等级的日志放行， 
			到我们想要的级别后，onMache设为ACCEPT，获取到日志，并onMismatch设置为DENY，丢弃低等级日志，并执行结束 -->
		<RollingFile name="RollingFileInfo"
			fileName="${sys:user.home}/logs/springboot-log4j2-demo/info.log"
			filePattern="${sys:user.home}/logs/springboot-log4j2-demo/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
				<ThresholdFilter level="WARN" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="INFO" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>

		<RollingFile name="RollingFileWarn"
			fileName="${sys:user.home}/logs/springboot-log4j2-demo/warn.log"
			filePattern="${sys:user.home}/logs/springboot-log4j2-demo/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<ThresholdFilter level="ERROR" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="WARN" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="20" />
		</RollingFile>

		<RollingFile name="RollingFileError"
			fileName="${sys:user.home}/logs/springboot-log4j2-demo/error.log"
			filePattern="${sys:user.home}/logs/springboot-log4j2-demo/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="ERROR" />
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>

		<RollingFile name="RollingFileInfoForLog1"
			fileName="${sys:user.home}/logs/springboot-log4j2-demo/log1-info.log"
			filePattern="${sys:user.home}/logs/springboot-log4j2-demo/$${date:yyyy-MM}/log1-info-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="WARN" onMatch="DENY"
				onMismatch="NEUTRAL" />
			<ThresholdFilter level="INFO" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>

		<RollingFile name="RollingFileInfoForLog2"
			fileName="${sys:user.home}/logs/springboot-log4j2-demo/log2-info.log"
			filePattern="${sys:user.home}/logs/springboot-log4j2-demo/$${date:yyyy-MM}/log2-info-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="WARN" onMatch="DENY"
				onMismatch="NEUTRAL" />
			<ThresholdFilter level="INFO" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>

	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--过滤掉spring和hibernate的一些无用的debug信息 -->
		<logger name="org.springframework" level="INFO">
		</logger>
		<logger name="org.mybatis" level="INFO">
		</logger>
		<Logger name="com.bycuimiao.demo.log1" level="info" additivity="false">
			<appender-ref ref="Console" />
			<appender-ref ref="RollingFileInfoForLog1" />
		</Logger>
		<Logger name="com.bycuimiao.demo.log2" level="info" additivity="false">
			<appender-ref ref="Console" />
			<appender-ref ref="RollingFileInfoForLog2" />
		</Logger>
		<root level="info">
			<appender-ref ref="Console" />
			<appender-ref ref="RollingFileDebug" />
			<appender-ref ref="RollingFileInfo" />
			<appender-ref ref="RollingFileWarn" />
			<appender-ref ref="RollingFileError" />
		</root>
	</loggers>

	<!-- ps: test3 这种配置的最终表现形式为 在test2的基础上，实现包级别的细化 -->

</configuration>